"""
Django settings for salesmanPortal project.
Generated by 'django-admin startproject' using Django 5.0.7.
"""

# Import os and dotenv to handle environment variables
import os
from dotenv import load_dotenv
from pathlib import Path

# This line reads your .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- SECURITY SETTINGS ---

# GOOD: Load the secret key from the .env file
SECRET_KEY = os.environ.get('SECRET_KEY')

# GOOD: DEBUG is set to False for production
DEBUG = True

# GOOD: ALLOWED_HOSTS is restricted to your server's IP
ALLOWED_HOSTS = ['bdamanagementportal.kripaluinnovations.com','65.0.20.58']


# --- APPLICATION DEFINITION ---

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic', # For static files
    'django.contrib.staticfiles',
    'adminPanel.apps.AdminpanelConfig',
    'salesmanPanel.apps.SalesmanpanelConfig',
    'storages', # For S3 storage
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # WhiteNoise Middleware should be placed right after SecurityMiddleware
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'salesmanPortal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'salesmanPortal.wsgi.application'


# --- DATABASE ---

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'myadmin',
        # GOOD: Load the database password from the .env file
        'PASSWORD': os.environ.get('DB_PASSWORD'),
        'HOST': 'my-django-db.cjog0kkish39.ap-south-1.rds.amazonaws.com',
        'PORT': '5432',
    }
}


# --- PASSWORD VALIDATION ---

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

AUTH_USER_MODEL = 'salesmanPanel.CustomUser'


# --- INTERNATIONALIZATION ---

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# --- STATIC & MEDIA FILES ---

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# Note: STATICFILES_DIRS is not typically needed in production if all your static
# files are inside your apps' static/ folders. But it doesn't hurt.
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]


# --- AWS S3 & FILE STORAGE ---
# DANGEROUS HARDCODED KEYS HAVE BEEN REMOVED.
# To get this working, you must attach an IAM Role with S3 permissions
# to your EC2 instance. This is the secure way to grant AWS access.

# AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
# AWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')
# AWS_S3_SIGNATURE_NAME = 's3v4'
# AWS_S3_FILE_OVERWRITE = False
# AWS_DEFAULT_ACL = None
# AWS_S3_VERIFY = True

STORAGES = {
    # For user-uploaded media files (goes to S3)
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
    },
    # For static files (served locally by WhiteNoise)
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    }
}


# --- DEFAULT PRIMARY KEY ---

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'